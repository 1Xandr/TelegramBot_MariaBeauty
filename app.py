from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.executor import start_polling
from days import what_month, choice_day
from callback_button import first_choice, service_of_first_choice, choice_month, choice_time
from config import dp


@dp.message_handler(Command('help'))
async def choice(message: Message):
    await message.answer('–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ú–∞—Ä–∏–∏\nüëâ <b>+380950988023</b>'
                                      '\nüëâ <b>+4915158482594</b>', parse_mode='html')
    await message.answer_contact('380950988023', first_name='–ú–∞—Ä–∏—è', last_name='–ì–Ω–∞—Ç—é–∫')


@dp.message_handler(Command('start')) # start bot
async def choice(message: Message):
    await message.answer(text='‚óè –ü—Ä–∏–≤–µ—Ç, –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —Å –ü–Ω - –ü—Ç\n\n‚óè –ï—Å–ª–∏ –≤—ã —Å–¥–µ–ª–∞–ª–∏ '
                              '–æ—à–∏–±–∫—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ —Å—é–¥–∞ üëâ /start\n\n'
                              '‚óè –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Ç–æ –Ω–∞–∂–º–∏—Ç–µ \n—Å—é–¥–∞ üëâ /help')
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ –û–ø—Ü–∏—éüëá', reply_markup=first_choice)


@dp.callback_query_handler(text_contains='back:first')  # start bot
async def second_start(call: CallbackQuery):
    await call.message.edit_text(text='–í—ã–±–µ—Ä–∏—Ç–µ –û–ø—Ü–∏—éüëá',)
    await call.message.edit_reply_markup(reply_markup=first_choice)


@dp.callback_query_handler(text_contains='depilation')  # if choose depilation
async def choice_of_depilation(call: CallbackQuery):
    await call.message.edit_text(text='–í—ã–±–∏—Ä–∏—Ç–µ –ó–æ–Ω—Éüëá')
    await call.message.edit_reply_markup(reply_markup=service_of_first_choice)


@dp.callback_query_handler(text_contains='service')
async def choice_of_month(call: CallbackQuery):
    await call.message.edit_text(text='–í—ã–±–∏—Ä–∏—Ç–µ –ú–µ—Å—è—Üüëá')
    await call.message.edit_reply_markup(reply_markup=choice_month)


@dp.callback_query_handler(text_contains='month')
async def choice_of_day(call: CallbackQuery):
    what_month(1 if call['data'] == 'month:next_month' else 0)  # send request to days.py
    await call.message.edit_text(text='–í—ã–±–∏—Ä–∏—Ç–µ –î–µ–Ω—åüëá')
    await call.message.edit_reply_markup(reply_markup=choice_day)


@dp.callback_query_handler(text_contains='day')
async def choice_of_day(call: CallbackQuery):
    await call.message.edit_text(text='–í—ã–±–∏—Ä–∏—Ç–µ –í—Ä–µ–º—èüëá')
    await call.message.edit_reply_markup(reply_markup=choice_time)


@dp.message_handler()
async def random_message(message: Message):
    await message.answer('–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª–∞üßê\n–î–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã –∫–Ω–æ–ø–∫–∏üòå')


start_polling(dp)
