from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from sql_file import get_empty_space

first_choice = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='‚úèÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è', callback_data='entry:make')
        ],
        [
            InlineKeyboardButton(text='üìÇ –ú–æ–∏ –∑–∞–ø–∏—Å–∏', callback_data="my_entry:my"),
            InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å', callback_data="my_entry:delete"),
        ],
    ]
)

option_choice = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='ü§ç –†–µ—Å–Ω–∏—á–∫–∏ ü§ç', callback_data='service:eyelashes'),
        ],
        [
            InlineKeyboardButton(text='ü§ç –î–µ–ø–∏–ª—è—Ü–∏—è ü§ç', callback_data="depilation"),
        ],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –î–µ–π—Å—Ç–≤–∏—è', callback_data="first:back"),
        ],
    ]
)

service_of_first_choice = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='ü§ç –ë–∏–∫–∏–Ω–∏ 30 –µ–≤—Ä–æ, 20 –º–∏–Ω ü§ç', callback_data='service:bikini')
        ],
        [
            InlineKeyboardButton(text='ü§ç –ù–æ–≥–∏ 45 –µ–≤—Ä–æ, 40 –º–∏–Ω ü§ç', callback_data="service:legs"),
        ],
        [
            InlineKeyboardButton(text='ü§ç –†—É–∫–∏ 20 –µ–≤—Ä–æ, 15 –º–∏–Ω ü§ç', callback_data='service:arm')
        ],
        [
            InlineKeyboardButton(text='ü§ç –õ–∏—Ü–æ 10 –µ–≤—Ä–æ, 10 –º–∏–Ω ü§ç', callback_data="service:face"),
        ],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –û–ø—Ü–∏–∏–∏', callback_data="entry:make"),
        ],
    ]
)

choice_month = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text='üìÖ –≠—Ç–æ—Ç –º–µ—Å—è—Ü üìÖ', callback_data='month:this_month'),
            InlineKeyboardButton(text='‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü ‚û°Ô∏è', callback_data="month:next_month"),
        ],
        [
            InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –û–ø—Ü–∏–∏–∏', callback_data="entry:make"),
        ],
    ]
)
back_to_entry = InlineKeyboardMarkup(
    inline_keyboard=[
            [
                InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –î–µ–π—Å—Ç–≤–∏—è', callback_data="first:back"),
            ]
    ]
)


def show_time(client_date: list):
    choice_time = InlineKeyboardMarkup(row_width=3)
    free_space = get_empty_space(client_date)  # get info from SQL, how many cell in day we have
    for time_but in range(len(free_space)):  # create button time [14:00, 15:00, 16:00 ...]
        choice_time.insert(InlineKeyboardButton(
            text=f'1{time_but + 4}:00', callback_data=f'time:1{time_but + 4}')) if free_space[time_but] else None
    # create button 'back'
    choice_time.row(InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –¥–Ω—è', callback_data="service:back"))

    return choice_time  # return Markup


def delete_entry_button(entry_data: list):
    delete_entry_markup = InlineKeyboardMarkup(row_width=1)  # add markup
    for i in entry_data:
        delete_entry_markup.insert(InlineKeyboardButton(text=i, callback_data=f"delete:{entry_data[0][16:]}"))
    return delete_entry_markup
